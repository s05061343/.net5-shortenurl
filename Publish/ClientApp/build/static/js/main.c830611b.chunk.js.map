{"version":3,"sources":["utils/api.js","components/Login/Login.js","store/configureReducers.js","store/AuthorizedRouteCookie.js","components/NavMenu.jsx","components/Layout.jsx","components/Home/Home.jsx","components/Login/Login.jsx","components/Login/Logout.jsx","components/Error/NotFound.jsx","components/Error/Unauthorized.jsx","App.js","registerServiceWorker.ts","index.jsx","store/configureStore.js"],"names":["userRequest","axios","create","baseURL","apiUserLoginCheck","data","post","a","item","console","error","sessionStorage","removeItem","actionCreators","dispatch","getState","appState","formData","FormData","append","loginUser","user","userId","password","then","res","log","JSON","parse","request","response","status","setItem","stringify","authToken","store","addNotification","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","isAuth","catch","err","title","setUserId","setPassword","logout","reducers","incomingAction","undefined","AuthorizedRouteCookie","this","props","Component","component","rest","pending","getItem","getApiUserLoginCheck","token","setState","location","pathname","to","render","React","connect","state","NavMenu","isOpen","toggle","className","Navbar","light","NavbarToggler","onClick","data-bs-toggle","aria-label","Collapse","NavbarBrand","tag","Link","class","icon","fas","faTimes","size","color","NavItem","NavLink","aria-current","Layout","children","src","alt","href","target","scope","Login","active","spinner","text","id","placeholder","onChange","e","value","htmlFor","Logout","action","method","name","NotFound","Unauthorized","window","origin","exact","path","Home","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","baseUrl","document","getElementsByTagName","getAttribute","history","createBrowserHistory","basename","initialState","middleware","thunkMiddleware","routerMiddleware","loggerMiddleware","rootReducer","combineReducers","router","connectRouter","enhancers","windowIfDefined","__REDUX_DEVTOOLS_EXTENSION__","push","createStore","compose","applyMiddleware","configureStore","ReactDOM","App","getElementById","URL","process","toString","addEventListener","fetch","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c830611b.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n// User相關的 api\r\nconst userRequest = axios.create({\r\n    baseURL: '/'\r\n});\r\n\r\n// User 相關的 api\r\nexport const apiUserLogin = data => userRequest.post('/auth/default/login', data);\r\nexport const apiUserLoginCheck = data => userRequest.post('/auth/default/CookieLogin', data);\r\nexport async function getApiUserLoginCheck() {\r\n    try {\r\n        const item = await apiUserLoginCheck({});\r\n        return item;\r\n    } catch (err) {\r\n        console.error(err);\r\n        sessionStorage.removeItem(\"authToken\");\r\n    }\r\n}","import { store } from 'react-notifications-component';\r\nimport { apiUserLogin } from '../../utils/api.js';\r\n\r\nexport const actionCreators = {\r\n    post: () => (dispatch, getState) => {\r\n        const appState = getState();\r\n\r\n        const formData = new FormData();\r\n        formData.append('userId', appState.loginUser.user.userId);\r\n        formData.append('password', appState.loginUser.user.password);\r\n\r\n        apiUserLogin(formData)\r\n            .then(res => {\r\n                console.log(res);\r\n                const data = JSON.parse(res.request.response);\r\n                console.log(data);\r\n                if (res.status === 200) {\r\n                    sessionStorage.setItem('authToken', JSON.stringify(data.authToken));\r\n                    store.addNotification({\r\n                        message: \"登入成功\",\r\n                        type: \"success\",\r\n                        insert: \"top\",\r\n                        container: \"top-right\",\r\n                        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n                        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n                        dismiss: {\r\n                            duration: 5000,\r\n                            onScreen: true\r\n                        }\r\n                    });\r\n                    dispatch({\r\n                        type: \"POST_LOGIN\",\r\n                        user: {\r\n                            authToken: data.authToken,\r\n                            userId: data.userId,\r\n                            password: '',\r\n                            isAuth: data.authToken ? true : false\r\n                        },\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                store.addNotification({\r\n                    title: \"登入失敗\",\r\n                    message: \"帳號或密碼輸入錯誤，請重新確認後重試\",\r\n                    type: \"warning\",\r\n                    insert: \"top\",\r\n                    container: \"top-right\",\r\n                    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n                    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n                    dismiss: {\r\n                        duration: 5000,\r\n                        onScreen: true\r\n                    }\r\n                });\r\n                //    dispatch({\r\n                //        type: \"ERROR_MESSAGE\",\r\n                //        user: {\r\n                //            authToken: '',\r\n                //            userId: appState.loginUser.user.userId,\r\n                //            password: appState.loginUser.user.password,\r\n                //            isAuth: false\r\n                //        },\r\n                //    });\r\n            });\r\n    },\r\n\r\n    setUserId: (userId) => (dispatch, getState) => {\r\n        const appState = getState();\r\n        dispatch({\r\n            type: \"SET_USERID\",\r\n            user: {\r\n                authToken: '',\r\n                userId: userId,\r\n                password: appState.loginUser.user.password,\r\n                isAuth: false\r\n            }\r\n        });\r\n    },\r\n\r\n    setPassword: (password) => (dispatch, getState) => {\r\n        const appState = getState();\r\n        dispatch({\r\n            type: \"SET_PASSWORD\",\r\n            user: {\r\n                authToken: '',\r\n                userId: appState.loginUser.user.userId,\r\n                password: password,\r\n                isAuth: false\r\n            }\r\n        });\r\n    },\r\n\r\n    logout: () => (dispatch, getState) => {\r\n        sessionStorage.removeItem('authToken');\r\n        dispatch({\r\n            type: \"USER_LOGOUT\",\r\n            user: {\r\n                authToken: '',\r\n                userId: '',\r\n                password: '',\r\n                isAuth: false\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nexport const reducer = (loginUser, incomingAction) => {\r\n    if (loginUser === undefined) {\r\n        return {\r\n            user: {\r\n                authToken: '',\r\n                userId: '',\r\n                password: '',\r\n                isAuth: false\r\n            }\r\n        };\r\n    }\r\n\r\n    switch (incomingAction.type) {\r\n        case 'POST_LOGIN':\r\n        case 'SET_USERID':\r\n        case 'SET_PASSWORD':\r\n        case 'USER_LOGOUT':\r\n        case 'ERROR_MESSAGE':\r\n            return {\r\n                user: incomingAction.user\r\n            };\r\n        default:\r\n            return loginUser;\r\n    }\r\n};\r\n\r\n","import * as Login from '../components/Login/Login.js';\r\n// Whenever an action is dispatched, Redux will update each top-level application state property using\r\n// the reducer with the matching name. It's important that the names match exactly, and that the reducer\r\n// acts on the corresponding ApplicationState property type.\r\nexport const reducers = {\r\n    loginUser: Login.reducer,\r\n};\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getApiUserLoginCheck } from '../utils/api.js';\r\n\r\nclass AuthorizedRouteCookie extends React.Component {\r\n    render() {\r\n        console.log(this.props);\r\n\r\n        const { component: Component, pending, user, ...rest } = this.props\r\n\r\n        const isAuth = sessionStorage.getItem(\"authToken\");\r\n\r\n        if (!isAuth) {\r\n            getApiUserLoginCheck()\r\n                .then(res => {\r\n                    console.log(res);\r\n                    if (res.status === 200) {\r\n                        sessionStorage.setItem(\"authToken\", JSON.parse(res.request.response).token);\r\n                        this.setState({});\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    sessionStorage.removeItem(\"authToken\");\r\n                })\r\n        }\r\n\r\n        if (isAuth && this.props.location.pathname === \"/unauthorized\") {\r\n            console.log(\"isAuth unauthorized\");\r\n            return (\r\n                <Redirect to=\"/home\" />\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Route {...rest} render={props => {\r\n                return isAuth || this.props.location.pathname === \"/unauthorized\" ?\r\n                    <Component {...props} /> : <Redirect to=\"/unauthorized\" />\r\n            }} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect((state) => state.loginUser)(AuthorizedRouteCookie);","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Collapse, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport * as store from '../components/Login/Login.js';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { fas } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport '../css/NavMenu.css';\r\nimport '../css/style-se/css/s-header.css'\r\n\r\n\r\nclass NavMenu extends React.PureComponent {\r\n    state = {\r\n        isOpen: false\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <header className='s-header'>\r\n                <div className=\"container-fluid\">\r\n                    <Navbar className=\"navbar navbar-expand-lg py-0 s-header-body\" light>\r\n                        <NavbarToggler onClick={this.toggle} className=\"\" data-bs-toggle=\"offcanvas\" aria-label=\"Toggle navigation\" />\r\n                        <Collapse className=\"navbar-collapse offcanvas-collapse\" isOpen={this.state.isOpen} >\r\n                            <div className=\"s-header-logo\">\r\n                                <NavbarBrand tag={Link} to=\"/home\" className=\"s-header-brand\"></NavbarBrand>\r\n                                <button aria-label=\"Toggle navigation\" data-bs-toggle=\"offcanvas\" type=\"button\" class=\"navbar-toggler\" onClick={this.toggle}>\r\n                                    <FontAwesomeIcon icon={fas.faTimes} size=\"lg\" color=\"white\" />\r\n                                </button>\r\n                            </div>\r\n                            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0 s-menu\">\r\n                                <NavItem className=\"s-item\">\r\n                                    <NavLink tag={Link} to=\"/home\">選項</NavLink>\r\n                                </NavItem>\r\n                                <NavItem className=\"s-item\">\r\n                                    <NavLink tag={Link} to=\"/not_found\">選項</NavLink>\r\n                                </NavItem>\r\n                                <NavItem className=\"s-item\">\r\n                                    <NavLink tag={Link} to=\"/unauthorized\">選項</NavLink>\r\n                                </NavItem>\r\n                            </ul>\r\n                        </Collapse>\r\n                    </Navbar>\r\n                </div>\r\n                <div className=\"s-headline py-2 bg-white border-bottom shadow-sm small\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"s-account\">\r\n                            <span className=\"s-item-type\">基本權限(SE)-專員</span>\r\n                            <span className=\"s-item-name\">李米妮</span>\r\n                            <span className=\"s-item-btn\"><a className=\"btn btn-sm s-btn-primary\" onClick={() => { this.props.logout(); }}>登出</a></span>\r\n                        </div>\r\n                        <nav className=\"s-breadcrumb\" aria-label=\"breadcrumb\">\r\n                            <ol className=\"breadcrumb m-0\">\r\n                                <li className=\"breadcrumb-item\"><a>首頁</a></li>\r\n                                <li className=\"breadcrumb-item\"><a>頁面</a></li>\r\n                                <li className=\"breadcrumb-item active\" aria-current=\"page\">所在頁面</li>\r\n                                <li className=\"s-item-btn\"><a className=\"btn btn-sm s-btn-outline-primary\">★加入最愛</a></li>\r\n                                <li className=\"s-item-btn\"><a className=\"btn btn-sm s-btn-outline-primary\">友善列印</a></li>\r\n                            </ol>\r\n                        </nav>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n};\r\n\r\nexport default connect((state) => state.loginUser, store.actionCreators)(NavMenu);\r\n","import * as React from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport NavMenu from './NavMenu.jsx';\r\n\r\nexport default class Layout extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <NavMenu />\r\n                <div className=\"s-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Home = () => (\r\n    <div className=\"container-fluid\">\r\n        <div className=\"card s-card s-card-mb shadow-sm\">\r\n            <div className=\"card-header\">\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <div>我的最愛</div>\r\n                    <div><a className=\"btn btn-sm s-btn-outline-primary\">設定</a><a className=\"btn btn-sm s-btn-outline-primary\">編輯</a></div>\r\n                </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <div className=\"s-list-btn\">\r\n                    <div className=\"s-item-btn\">\r\n                        <a><img src=\"../assets/style-se//img/btn-size.png\" alt=\"\" /><span className=\"s-text\">文字</span></a>\r\n                    </div>\r\n                    <div className=\"s-item-btn\">\r\n                        <a><img src=\"../assets/style-se//img/btn-size.png\" alt=\"\" /><span className=\"s-text\">１２３４５６７８９０１２３４５</span></a>\r\n                    </div>\r\n                    <div className=\"s-item-btn\">\r\n                        <a><img src=\"../assets/style-se//img/btn-size.png\" alt=\"\" /><span className=\"s-text\">文字文字文字文字文字文字</span></a>\r\n                    </div>\r\n                    <div className=\"s-item-btn\">\r\n                        <a><img src=\"../assets/style-se//img/btn-size.png\" alt=\"\" /><span className=\"s-text\">文字</span></a>\r\n                    </div>\r\n                    <div className=\"s-item-btn\">\r\n                        <a><img src=\"../assets/style-se//img/btn-size.png\" alt=\"\" /><span className=\"s-text\">文字</span></a>\r\n                    </div>\r\n                    <div className=\"s-item-btn\">\r\n                        <a><img src=\"../assets/style-se//img/btn-size.png\" alt=\"\" /><span className=\"s-text\">文字</span></a>\r\n                    </div>\r\n                    <div className=\"s-item-btn\">\r\n                        <a><img src=\"../assets/style-se//img/btn-size.png\" alt=\"\" /><span className=\"s-text\">文字</span></a>\r\n                    </div>\r\n                    <div className=\"s-item-btn\">\r\n                        <a><img src=\"../assets/style-se//img/btn-size.png\" alt=\"\" /><span className=\"s-text\">文字</span></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"card s-card s-card-mb shadow-sm\">\r\n            <div className=\"card-body\">\r\n                SEOS問題回報表單：<a href=\"https://pse.is/DW9AB\" target=\"_blank\">https://pse.is/DW9AB</a>，已回報問題調整進度顯示：<a href=\"https://pse.is/G9URV\" target=\"_blank\">https://pse.is/G9URV</a>\r\n            </div>\r\n        </div>\r\n        <div className=\"card s-card s-card-mb shadow-sm\">\r\n            <div className=\"card-header\">標題文字</div>\r\n            <div className=\"card-body\">\r\n                <table className=\"table s-table table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">First</th>\r\n                            <th scope=\"col\">Last</th>\r\n                            <th scope=\"col\">Handle</th>\r\n                            <th scope=\"col\">Handle</th>\r\n                            <th scope=\"col\">Handle</th>\r\n                            <th scope=\"col\">Handle</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>TD</td>\r\n                            <td>TD</td>\r\n                            <td>TD</td>\r\n                            <td>TD</td>\r\n                            <td>TD</td>\r\n                            <td>TD</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>TD</td>\r\n                            <td>TD</td>\r\n                            <td>TD</td>\r\n                            <td>TD</td>\r\n                            <td>TD</td>\r\n                            <td>TD</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>TD</td>\r\n                            <td>TD</td>\r\n                            <td>TD</td>\r\n                            <td>TD</td>\r\n                            <td>TD</td>\r\n                            <td>TD</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>TD</td>\r\n                            <td>TD</td>\r\n                            <td>TD</td>\r\n                            <td>TD</td>\r\n                            <td>TD</td>\r\n                            <td>TD</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default connect()(Home);\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as store from '../Login/Login.js';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n\r\nimport '../../css/style-se/css/s-signin.css';\r\n\r\nclass Login extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <LoadingOverlay\r\n                    active={this.props.loginUser}\r\n                    spinner\r\n                    text='Loading your content...'\r\n                >\r\n                <div className=\"text-center\">\r\n                    <main className=\"form-signin\">\r\n                        <form>\r\n                            <div className=\"s-logo\"></div>\r\n                            <h1 className=\"s-title\">SEOS醫美管理系統</h1>\r\n                            <div className=\"form-floating\">\r\n                                <input type=\"text\" className=\"form-control\" id=\"floatingInput\" placeholder=\"ID\"\r\n                                    onChange={(e) => { this.props.setUserId(e.target.value); }} />\r\n                                <label htmlFor=\"floatingInput\" >帳號</label>\r\n                            </div>\r\n                            <div className=\"form-floating\">\r\n                                <input type=\"password\" className=\"form-control\" id=\"floatingPassword\" placeholder=\"Password\"\r\n                                    onChange={(e) => { this.props.setPassword(e.target.value); }} />\r\n                                <label htmlFor=\"floatingPassword\" >密碼</label>\r\n                            </div>\r\n                            <button type=\"button\" className=\"w-100 btn btn-lg s-btn-primary\" onClick={() => { this.props.post(); }}>登入</button>\r\n                        </form>\r\n                    </main>\r\n                    </div>\r\n                </LoadingOverlay>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nexport default connect((state) => state.loginUser, store.actionCreators)(Login);\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as store from '../Login/Login.js';\r\n\r\nclass Logout extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-5 mx-auto\">\r\n                            <div id=\"first\">\r\n                                <div className=\"myform form \">\r\n                                    <form action=\"\" method=\"post\" name=\"login\">\r\n                                        <div className=\"d-grid gap-2\">\r\n                                            <button type=\"button\" className=\"btn btn-success btn-lg\" onClick={() => { this.props.logout(); }}>登出</button>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nexport default connect((state) => state.loginUser, store.actionCreators)(Logout);\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass NotFound extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"error-template\">\r\n                                <h1>\r\n                                    Oops!</h1>\r\n                                <h2>\r\n                                    404 Not Found</h2>\r\n                                <div className=\"error-details\">\r\n                                    Sorry, an error has occured, Requested page not found!\r\n                                </div>\r\n                                <div className=\"error-actions\">\r\n                                    <a href=\"http://www.jquery2dotnet.com\" className=\"btn btn-primary btn-lg\"><span className=\"glyphicon glyphicon-home\"></span>\r\n                        Take Me Home </a><a href=\"http://www.jquery2dotnet.com\" className=\"btn btn-default btn-lg\"><span className=\"glyphicon glyphicon-envelope\"></span> Contact Support </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nexport default connect()(NotFound);\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Unauthorized extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"s-content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"card s-card s-card-mb shadow-sm\">\r\n                            <div className=\"card-header\">\r\n                                401 Unauthorized\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <h1>沒有使用權限，</h1>\r\n                                <h2>請使用有權限的帳號!</h2>\r\n                                {/*<a href={'http://localhost/admin/login/Login.aspx?purl=' + window.location.origin + '/home'} className=\"btn s-btn-primary btn-lg\"><span className=\"glyphicon glyphicon-home\"></span>重新登入</a>*/}\r\n                                <a href={'https://seos.sainteir.com/admin/login/Login.aspx?purl=' + window.location.origin + '/home'} className=\"btn s-btn-primary btn-lg\"><span className=\"glyphicon glyphicon-home\"></span>重新登入</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nexport default connect()(Unauthorized);\r\n","import React from 'react'\r\nimport { BrowserRouter, Switch } from 'react-router-dom'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n/*import AuthorizedRoute from './store/AuthorizedRoute.js'*/\r\nimport ReactNotification from 'react-notifications-component'\r\nimport AuthorizedRouteCookie from './store/AuthorizedRouteCookie.js'\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\n// Layouts\r\nimport Layout from './components/Layout.jsx';\r\nimport Home from './components/Home/Home.jsx';\r\nimport Login from './components/Login/Login.jsx';\r\nimport Logout from './components/Login/Logout.jsx';\r\nimport NotFound from './components/Error/NotFound.jsx';\r\nimport Unauthorized from './components/Error/Unauthorized.jsx';\r\n\r\nimport '../src/css/custom.css'\r\nimport 'react-notifications-component/dist/theme.css'\r\n\r\nexport default () => (\r\n    <div>\r\n        <BrowserRouter>\r\n            <ReactNotification />\r\n            <Layout>\r\n                <Switch>\r\n                    <AuthorizedRouteCookie exact path=\"/home\" component={Home} />\r\n                    <AuthorizedRouteCookie path=\"/login\" component={Login} />\r\n                    <AuthorizedRouteCookie path=\"/logout\" component={Logout} />\r\n                    <Route path=\"/not_found\" component={NotFound} />\r\n                    <AuthorizedRouteCookie path=\"/unauthorized\" component={Unauthorized} />\r\n                    <Redirect to=\"/home\" />\r\n                </Switch>\r\n            </Layout>\r\n        </BrowserRouter>\r\n    </div>\r\n\r\n);","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const url = process.env.PUBLIC_URL as string;\r\n        const publicUrl = new URL(url, window.location.toString());\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Lets check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl);\r\n            } else {\r\n                // Is not local host. Just register service worker\r\n                registerValidSW(swUrl);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing as ServiceWorker;\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the old content will have been purged and\r\n                            // the fresh content will have been added to the cache.\r\n                            // It's the perfect time to display a \"New content is\r\n                            // available; please refresh.\" message in your web app.\r\n                            console.log('New content is available; please refresh.');\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (response.status === 404 || (contentType && contentType.indexOf('javascript') === -1)) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\nimport configureStore from './store/configureStore';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n//SE custom CSS\r\nimport './css/style-se/css/s-color.css'\r\nimport './css/style-se/css/s-style.css'\r\nimport './css/style-se/css/s-layout.css'\r\n\r\n\r\n// Create browser history to use in the Redux store\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst history = createBrowserHistory({ basename: baseUrl });\r\n\r\n// Get the application-wide store instance, prepopulating with state from the server where available.\r\nconst store = configureStore(history);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ConnectedRouter history={history}>\r\n            <App />\r\n        </ConnectedRouter>\r\n    </Provider>,\r\n    document.getElementById('root'));\r\n\r\nregisterServiceWorker();\r\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\r\nimport { reducers } from './configureReducers.js';\r\nimport loggerMiddleware from 'redux-logger';\r\n\r\n\r\nexport default function configureStore(history, initialState) {\r\n    const middleware = [\r\n        thunkMiddleware,\r\n        routerMiddleware(history),\r\n        loggerMiddleware\r\n    ];\r\n\r\n    const rootReducer = combineReducers({\r\n        ...reducers,\r\n        router: connectRouter(history)\r\n    });\r\n\r\n    const enhancers = [];\r\n    const windowIfDefined = typeof window === 'undefined' ? null : window; // eslint-disable-line @typescript-eslint/no-explicit-any\r\n    if (windowIfDefined && windowIfDefined.__REDUX_DEVTOOLS_EXTENSION__) {\r\n        enhancers.push(windowIfDefined.__REDUX_DEVTOOLS_EXTENSION__());\r\n    }\r\n\r\n    return createStore(\r\n        rootReducer,\r\n        initialState,\r\n        compose(applyMiddleware(...middleware), ...enhancers)\r\n    );\r\n}\r\n"],"sourceRoot":""}